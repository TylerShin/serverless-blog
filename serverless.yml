service: tylor-blog
provider:
  name: aws
  runtime: nodejs4.3
  stage: production
  region: us-east-1
package:
  artifact: dist.zip
functions:
  ssr:
    handler: handler.ssr
    events:
      - http:
          method: get
          path: ${self:service}
      - http:
          method: any
          path: ${self:service}/{proxy+}

resources:
  Resources:
    DynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: serverlessBlogPosts
        AttributeDefinitions:
          - AttributeName: postId
            AttributeType: S
        KeySchema:
          - AttributeName: postId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    DynamoDBIamPolicy:
      Type: AWS::IAM::Policy
      DependsOn: DynamoDbTable
      Properties:
        PolicyName: AmazonDynamoDBFullAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:Query
                - dynamodb:Scan
              Resource: arn:aws:dynamodb:*:*:table/serverlessBlogPosts
        Roles:
          - Ref: IamRoleLambdaExecution
    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          DefaultRootObject: ''
          Enabled: true
          ViewerCertificate:
            AcmCertificateArn: arn:aws:acm:us-east-1:624950342265:certificate/7b8b7f19-faa9-44f3-90be-038a38329160
            SslSupportMethod: sni-only
          DefaultCacheBehavior:
            AllowedMethods:
              - GET
              - HEAD
            CachedMethods:
              - HEAD
              - GET
            ForwardedValues:
              QueryString: true
              Headers:
                - original-uri
                - User-Agent
                - X-Forwarded-For
            TargetOriginId: "${self:service}-${self:provider.stage}-api-gateway"
            ViewerProtocolPolicy: redirect-to-https
          Aliases:
            - tylorsh.in
            - www.tylorsh.in
          Origins:
          - CustomOriginConfig:
              HTTPSPort: 443
              OriginProtocolPolicy: https-only
            DomainName:
              "Fn::Join": ["", [{"Ref": "ApiGatewayRestApi"}, ".execute-api.${self:provider.region}.amazonaws.com"]]
            Id: "${self:service}-${self:provider.stage}-api-gateway"
            OriginPath: /${self:provider.stage}/${self:service}
